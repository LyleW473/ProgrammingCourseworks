#BlueJ class context
comment0.target=StatsCounter
comment0.text=\n\ Class\ to\ count\ the\ stats\ for\ each\ borough\ within\ a\ specified\ date\ range.\ \n\ \n\ Used\ for\ button\ colours\ based\ on\ a\ borough's\ death\ rate\ during\ a\ specific\ date\ range.\n\ \n\ All\ hash\ maps\ are\ shared\ by\ every\ StatsCounter\ instance.\ Every\ class\ with\ a\ StatsCounter\ instance\ is\ able\ to\ update\ the\ current\ state\ of\ the\ \n\ hashmap\ (but\ only\ the\ "CovidViewer"\ is\ necessary\ for\ updating\ them)\ and\ get\ the\ associated\ stats\ for\ a\ borough\ for\ a\ given\ date\ range.\n
comment1.params=loadedData
comment1.target=void\ reset(java.util.ArrayList)
comment1.text=\n\ Resets\ the\ death\ counter\ to\ its\ initial\ state\ to\ ensure\ counting\ accuracy.\n\ @param\ loadedData\ The\ data\ for\ all\ boroughs\ within\ the\ specified\ date\ range.\n
comment10.params=testBoroughs
comment10.target=void\ setBoroughs(java.util.HashSet)
comment10.text=\n\ Sets\ the\ list\ of\ boroughs\ to\ the\ passed\ in\ list.\n\ @param\ testBoroughs\ The\ list\ of\ boroughs\ to\ set\ the\ current\ list\ to.\n
comment11.params=testMaps
comment11.target=void\ setDeathsMap(java.util.HashMap)
comment11.text=\n\ Sets\ the\ total\ deaths\ hashmap\ to\ the\ passed\ in\ hashmap.\n\ @param\ testMaps\ The\ hashmap\ to\ set\ the\ current\ total\ deaths\ hashmap\ to.\n
comment12.params=testMaps
comment12.target=void\ setCaseMap(java.util.HashMap)
comment12.text=\n\ Sets\ the\ total\ cases\ hashmap\ to\ the\ passed\ in\ hashmap.\n\ @param\ testMaps\ The\ hashmap\ to\ set\ the\ current\ total\ cases\ hashmap\ to.\n
comment13.params=testVal
comment13.target=void\ setHighestDeaths(double)
comment13.text=\n\ Sets\ the\ highest\ deaths\ attribute\ to\ the\ passed\ in\ value.\n\ @param\ testVal\ The\ value\ to\ set\ the\ highest\ deaths\ to.\n
comment2.params=
comment2.target=void\ update()
comment2.text=\n\ Updates\ the\ total\ death\ count\ for\ each\ of\ the\ boroughs\ within\ the\ specified\ date\ range.\n
comment3.params=loadedData\ numRecordedPerBorough\ startDateDeaths\ endDateDeaths\ startDate\ endDate
comment3.target=void\ fillDataHashmaps(java.util.ArrayList,\ java.util.HashMap,\ java.util.HashMap,\ java.util.HashMap,\ java.time.LocalDate,\ java.time.LocalDate)
comment3.text=\n\ Fills\ all\ of\ the\ data\ hashmaps\ with\ data\ within\ the\ specified\ date\ range.\ \n\ This\ method\ alters\ the\ original\ hashmaps\ passed\ in,\ by\ accessing\ copies\ of\ their\ references\ and\ adding\ data\ to\ them.\n\ \n\ @param\ loadedData\ An\ array\ list\ containing\ data\ for\ all\ boroughs\ within\ the\ selected\ date\ range.\n\ @param\ numRecordedPerBorough\ A\ hashmap\ that\ maps\ boroughs\ to\ the\ number\ of\ records\ in\ the\ dataset\ within\ the\ selected\ date\ range.\n\ @param\ startDateDeaths\ A\ hashmap\ that\ maps\ boroughs\ to\ the\ date\ of\ the\ earliest\ record\ belonging\ to\ that\ borough,\ within\ the\ selected\ \n\ date\ range.\n\ @param\ endDateDeaths\ A\ hashmap\ that\ maps\ boroughs\ to\ the\ date\ of\ the\ latest\ record\ belonging\ to\ that\ borough,\ within\ the\ selected\ date\ range.\n\ @param\ startDate\ The\ start\ date\ of\ the\ COVID\ dataset.\n\ @param\ endDate\ The\ end\ date\ of\ the\ COVID\ dataset.\n
comment4.params=oldVal
comment4.target=double\ normaliseCount(java.lang.Double)
comment4.text=\n\ @return\ The\ normalised\ version\ of\ the\ passed\ in\ death\ count\ (value\ between\ 0\ and\ 1).\n\ @param\ oldVal\ The\ value\ to\ normalise.\n\ Used\ by\ the\ BoroughButton\ class\ to\ get\ the\ normalised\ values\ (for\ death\ rates).\n
comment5.params=borough
comment5.target=java.lang.Double\ getBoroughDeathRate(java.lang.String)
comment5.text=\n\ @return\ The\ death\ rate\ associated\ with\ the\ specified\ borough\ within\ a\ specified\ date\ range.\n\ @param\ borough\ The\ borough\ to\ find\ the\ death\ rate\ for.\n\ For\ boroughs\ that\ do\ not\ have\ data\ within\ the\ date\ range,\ return\ 0.0\ by\ default.\n
comment6.params=borough
comment6.target=java.lang.Double\ getBoroughTotalDeaths(java.lang.String)
comment6.text=\n\ @return\ The\ total\ deaths\ associated\ with\ the\ specified\ borough\ within\ a\ specified\ date\ range.\n\ @param\ borough\ The\ borough\ to\ find\ the\ total\ deaths\ for.\n\ For\ boroughs\ that\ do\ not\ have\ data\ within\ the\ date\ range,\ return\ 0.0\ by\ default.\n
comment7.params=borough
comment7.target=java.lang.Double\ getBoroughAvgTotalCases(java.lang.String)
comment7.text=\n\ @return\ The\ average\ total\ cases\ associated\ with\ the\ specified\ borough\ within\ a\ specified\ date\ range.\n\ @param\ borough\ The\ borough\ to\ find\ the\ average\ total\ cases\ for.\n\ For\ boroughs\ that\ do\ not\ have\ data\ within\ the\ date\ range,\ return\ 0.0\ by\ default.\n
comment8.params=GMRType
comment8.target=java.lang.Double\ getAvgGMRAcrossBoroughs(java.lang.String)
comment8.text=\n\ @return\ The\ average\ GMR\ value\ for\ a\ specified\ GMR\ type\ across\ a\ specific\ date\ range\ across\ all\ boroughs.\n\ @param\ GMRType\ The\ GMR\ type\ to\ find\ the\ total\ GMR\ value\ for.\n\ Returns\ 0.0\ by\ default\ (All\ GMR\ types\ are\ set\ to\ 0.0\ by\ default).\n
comment9.params=
comment9.target=java.util.HashSet\ getBoroughs()
comment9.text=\n\ @return\ The\ boroughs\ that\ have\ COVID\ data\ within\ the\ specified\ date\ range.\n
numComments=14
